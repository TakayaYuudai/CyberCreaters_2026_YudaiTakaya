//================================================================================================================================================================
//
//3Dモデルの処理[objectX.h]
//Author : Yuudai Takaya
//
//================================================================================================================================================================
#ifndef _OBJECTX_H_
#define _OBJECTX_H_

//================================================================================================================================================================
//ライブラリリンク
//================================================================================================================================================================
#include "object.h"
#include <string>

//================================================================================================================================================================
//クラス定義
//================================================================================================================================================================

//********************************************3Dモデル管理クラス****************************************************************
class CObjectX :public CObject
{
	//-----------------------------------------パブリック----------------------------------------------
public:
	CObjectX(int nPriority);                 //コンストラクタ
	~CObjectX()    override;	//デストラクタ
	HRESULT Init() override;	//初期設定
	void Uninit()  override;	//終了処理
	void Update()  override;	//更新処理
	void Draw()    override;	//描画処理
	void ModelSizeSum();        //モデルの最大値と最小を求める

	void SetPos(float x, float y, float z);
	void SetScale(float scaleX, float scaleY, float scaleZ);
	void ModelFilePath(std::string sPath);
	void SetRot(D3DXVECTOR3 rot) { m_rot = rot; }

	D3DXVECTOR3* GetPos();
	D3DXVECTOR3* GetRot();
	D3DXVECTOR3* GetSize();

	static CObjectX* Create(int nPriority);

	//-----------------------------------------プライベート----------------------------------------------
private:
	D3DXVECTOR3 m_pos;						    //頂点座標
	D3DXVECTOR3 m_rot;						    //向き
	D3DXMATRIX m_mtxWorld;                      //ワールド変換行列
	D3DXVECTOR3 m_Scale;                        //オブジェクトのサイズを設定
	LPD3DXMESH m_pMesh;                         //メッシュへのポインタ
	LPD3DXBUFFER m_pBuffMat;                    //マテリアルへのポインタ
	DWORD m_dwNumMat;                           //マテリアルの数

	D3DXVECTOR3	m_vtxMaxObject;
	D3DXVECTOR3 m_vtxMinObject;
	D3DXVECTOR3 m_Modelsize;
};

#endif