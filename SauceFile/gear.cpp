//================================================================================================================================================================
//
//プレイヤーHPゲージ処理[player_hp_gage.cpp]
//Author : Yuudai Takaya
//
//================================================================================================================================================================

//================================================================================================================================================================
//ライブラリリンク
//================================================================================================================================================================
#include "gear.h"
#include "manager.h"

//================================================================================================================================================================
//マクロ定義
//================================================================================================================================================================
#define	BLOCK_WIDE   (40.f) //ブロックの横半径
#define	BLOCK_HEIGHT (BLOCK_WIDE * 0.75f) //ブロックの縦半径

//================================================================================================================================================================
//グローバル変数
//================================================================================================================================================================
bool CGear::m_bGearShift = false;

//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
CGear::CGear():CObject2D(1)
{

}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
CGear::~CGear()
{
}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT CGear::Init()
{
	m_SizeTime = BLOCK_WIDE;
	CObject2D::Init();
	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void CGear::Uninit()
{
	CObject2D::Uninit();
}

//================================================================================================================================================================
//更新処理（全オブジェクト）
//================================================================================================================================================================
void CGear::Update()
{
	CObject2D::Update();
}

//================================================================================================================================================================
//描画処理（全オブジェクト）
//================================================================================================================================================================
void CGear::Draw()
{
	CObject2D::Draw();
}


//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
CSpeedgear::CSpeedgear()
{
}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
CSpeedgear::~CSpeedgear()
{

}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT CSpeedgear::Init()
{
	CGear::Init();
	SetTexture("data\\TEXTURE\\gear_speed.png");
	SetSize(BLOCK_WIDE, BLOCK_HEIGHT);
	SetPos(spos.x,spos.y);
	m_gearback = CGere_Back::Create({ spos.x,spos.y }, 60.f, 60.f);

	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void CSpeedgear::Uninit()
{
	if (m_gearback != nullptr){
		m_gearback->Uninit();
		m_gearback = nullptr;
	}

	CGear::Uninit();
}

//================================================================================================================================================================
//更新処理（全オブジェクト）
//================================================================================================================================================================
void CSpeedgear::Update(){

	if (m_gearback == nullptr)
	{
		return;
	}

	const float mxs = 7.5f;
	const float SpinLow = 0.01f;
	const float SpinHigh = 0.3f;

	if (!m_bGearShift&& m_SizeTime <= BLOCK_WIDE){
		m_SizeTime++;
	}
	else {
		if (m_SizeTime >= BLOCK_HEIGHT){
			m_SizeTime--;
		}
	}

	//火力特化
	if (m_bGearShift) {
		//右に向けて移動
		if (m_gearback->GetPos()->x < apos.x) {
			m_gearback->SetMove({ mxs,0.f });
			m_gearback->SetRotAnim(-SpinHigh);
		}
		else {
			m_gearback->SetMove({ 0.f,0.f });
			m_gearback->SetPos(apos.x, apos.y);
			m_gearback->SetRotAnim(-SpinLow);
		}
	}

	//機動力特化
	else{
		//左に向けて移動
		if (m_gearback->GetPos()->x > spos.x) {
			m_gearback->SetMove({ -mxs,0.f });
			m_gearback->SetRotAnim(SpinHigh);
		}
		else {
			m_gearback->SetMove({ 0.f,0.f });
			m_gearback->SetPos(spos.x, spos.y);
			m_gearback->SetRotAnim(SpinLow);
		}
	}

	SetSize(m_SizeTime, m_SizeTime);

	CGear::Update();
}

//================================================================================================================================================================
//描画処理（全オブジェクト）
//================================================================================================================================================================
void CSpeedgear::Draw()
{
	CGear::Draw();
}

//================================================================================================================================================================
//ブロック生成
//================================================================================================================================================================
CSpeedgear* CSpeedgear::Create(){
	CSpeedgear* pCSpeedgear = new CSpeedgear();
	pCSpeedgear->Init();
	return pCSpeedgear;
}

//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
CAtkgear::CAtkgear()
{
}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
CAtkgear::~CAtkgear()
{

}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT CAtkgear::Init(){

	CGear::Init();
	SetTexture("data\\TEXTURE\\gear_atk.png");
	SetSize(BLOCK_WIDE * 0.5f, BLOCK_HEIGHT * 0.5f);
	CObject2D::SetPos(apos.x, apos.y);

	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void CAtkgear::Uninit()
{
	CGear::Uninit();
}

//================================================================================================================================================================
//更新処理
//================================================================================================================================================================
void CAtkgear::Update()
{
	if (m_bGearShift && m_SizeTime <= BLOCK_WIDE) {
		m_SizeTime++;
	}

	else {
		if (m_SizeTime >= BLOCK_HEIGHT) {
			m_SizeTime--;
		}
	}

	SetSize(m_SizeTime, m_SizeTime);
	
	CGear::Update();
}

//================================================================================================================================================================
//描画処理
//================================================================================================================================================================
void CAtkgear::Draw()
{
	CGear::Draw();
}

//================================================================================================================================================================
//ブロック生成
//================================================================================================================================================================
CAtkgear* CAtkgear::Create()
{
	CAtkgear* pCAtkgear = new CAtkgear();
	pCAtkgear->Init();
	return pCAtkgear;
}