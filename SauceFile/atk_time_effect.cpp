//================================================================================================================================================================
//
//3D弾処理[bullet3D.cpp]
//Author : Yuudai Takaya
//
//================================================================================================================================================================

//================================================================================================================================================================
//ライブラリリンク
//================================================================================================================================================================
#include "atk_time_effect.h"
#include "enemy_boss.h"
#include "manager.h"

//================================================================================================================================================================
//マクロ定義
//================================================================================================================================================================
#define	BLOCK_WIDE   (120.0f) //3D弾の横半径
#define	BLOCK_HEIGHT (120.0f) //3D弾の縦半径

//================================================================================================================================================================
//グローバル変数
//================================================================================================================================================================

//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
CAtk_Time_Effect::CAtk_Time_Effect() :CBillboard(5)
{

}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
CAtk_Time_Effect::~CAtk_Time_Effect()
{

}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT CAtk_Time_Effect::Init()
{
	CBillboard::Init();

	SetSize(BLOCK_WIDE, BLOCK_WIDE);

	SetCollar(255,0, 0, 255);

	SetTexture("data\\TEXTURE\\Atk_Limiline.png");

	m_fShrink = (float)NULL;

	m_fSumShrink = (float)NULL;

	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void CAtk_Time_Effect::Uninit()
{
	CBillboard::Uninit();
}

//================================================================================================================================================================
//更新処理（全オブジェクト）
//================================================================================================================================================================
void CAtk_Time_Effect::Update()
{
	m_fSumShrink -= m_fShrink;

	DamageLife(1);

	SetSize(BLOCK_WIDE + m_fSumShrink, BLOCK_WIDE+ m_fSumShrink);

	CObject* pObject = CObject::GetTop(); // リストの先頭オブジェクトから開始

	while (pObject != nullptr)
	{
		// nullptrチェックは不要。whileループで pObject != nullptr が保証される

		// オブジェクトの種類取得
		CObject::TYPE type = pObject->GetType();

		if (type == CObject::TYPE::BOSS)
		{
			// 安全にダウンキャスト
			CEnemy_Boss* pBoss = dynamic_cast<CEnemy_Boss*>(pObject);

			// ダウンキャストに成功した場合
			if (pBoss)
			{
				float x = pBoss->GetPos()->x;
				float z = pBoss->GetPos()->z;
				float y = pBoss->GetPos()->y + 150.f;

				SetPos(x, y, z);
			}
		}
		// 次のオブジェクトに移動
		pObject = pObject->GetNext();
	}
	CBillboard::Update();
}

//================================================================================================================================================================
//描画処理（全オブジェクト）
//================================================================================================================================================================
void CAtk_Time_Effect::Draw()
{
	//レンダラー情報取得
	LPDIRECT3DDEVICE9 DEVICE = CManager::GetInstance()->GetRenderer()->GetDevice();

	// DEVICE を使って深度テストを設定する
	DEVICE->SetRenderState(D3DRS_ZENABLE, FALSE);

	//描画
	CBillboard::Draw();

	// DEVICE　による深度テストを元に戻す
	DEVICE->SetRenderState(D3DRS_ZENABLE, TRUE);
}

//================================================================================================================================================================
// 3D弾生成
//================================================================================================================================================================
CAtk_Time_Effect* CAtk_Time_Effect::Create(int nLife,float Shrink)
{
	// エフェクトの新規生成
	CAtk_Time_Effect* pCAtk_Time_Effect = new CAtk_Time_Effect();

	// 初期化
	pCAtk_Time_Effect->Init();

	pCAtk_Time_Effect->SetLife(nLife);

	pCAtk_Time_Effect->m_fShrink = Shrink;

	return pCAtk_Time_Effect;
}