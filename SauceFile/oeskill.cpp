//================================================================================================================================================================
//
//プレイヤーHPゲージ処理[player_hp_gage.cpp]
//Author : Yuudai Takaya
//
//================================================================================================================================================================

//================================================================================================================================================================
//ライブラリリンク
//================================================================================================================================================================
#include "oeskill.h"
#include "manager.h"

//================================================================================================================================================================
//マクロ定義
//================================================================================================================================================================
#define	BLOCK_WIDE   (50.f) //ブロックの横半径
#define	BLOCK_HEIGHT (BLOCK_WIDE * 0.75f) //ブロックの縦半径

//================================================================================================================================================================
//グローバル変数
//================================================================================================================================================================
bool COeSkill::m_bOeskillShift    = false;
bool COeSkill::m_bOeSkillCoolDown = false;

//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
COeSkill::COeSkill() :CObject2D(0), m_fCoolDownTime(NULL){

}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
COeSkill::~COeSkill()
{
}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT COeSkill::Init()
{
	m_SizeTime = BLOCK_WIDE;

	m_bOeskillShift = false;

	m_bOeSkillCoolDown = false;

	CObject2D::Init();

	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void COeSkill::Uninit()
{
	CObject2D::Uninit();
}

//================================================================================================================================================================
//更新処理（全オブジェクト）
//================================================================================================================================================================
void COeSkill::Update()
{
	//現在のスキル使用状態
	const bool bSkillUse = m_bOeSkillCoolDown;

	//スキルがクールダウン時
	if (bSkillUse){
		if (m_SizeTime >= BLOCK_HEIGHT) {
			m_SizeTime--;
		}
	}

	CObject2D::Update();
}

//================================================================================================================================================================
//描画処理（全オブジェクト）
//================================================================================================================================================================
void COeSkill::Draw()
{
	CObject2D::Draw();
}


//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
COeSkill_Cool::COeSkill_Cool()
{
}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
COeSkill_Cool::~COeSkill_Cool()
{

}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT COeSkill_Cool::Init()
{
	COeSkill::Init();

	SetTexture("data\\TEXTURE\\cool_icon.png");

	SetSize(BLOCK_WIDE, BLOCK_HEIGHT);

	CObject2D::SetPos(SCREEN_WIDTH * 0.8f, SCREEN_HEIGHT * 0.9f);

	m_CoolSkilDownIcon = CSkill_CoolDown::Create({ SCREEN_WIDTH * 0.8f, SCREEN_HEIGHT * 0.9f - BLOCK_HEIGHT });

	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void COeSkill_Cool::Uninit(){

	if (m_CoolSkilDownIcon != nullptr){
		m_CoolSkilDownIcon->Uninit();
		m_CoolSkilDownIcon = nullptr;
	}

	COeSkill::Uninit();
}

//================================================================================================================================================================
//更新処理（全オブジェクト）
//================================================================================================================================================================
void COeSkill_Cool::Update(){

	bool bStay = CManager::GetInstance()->GetCamera()->GetPlayStay();

	if (bStay){
		return;
	}

	//透明度取得
	const int nAlpha = m_CoolSkilDownIcon->GetAlpha();

	if (!m_bOeSkillCoolDown){

		if (!m_bOeskillShift && m_SizeTime <= BLOCK_WIDE) {
			m_SizeTime++;
		}

		else {
			if (m_SizeTime >= BLOCK_HEIGHT) {
				m_SizeTime--;
			}
		}

		if (nAlpha > NULL) {
			m_CoolSkilDownIcon->PlusAlpha(-m_nPlusAlpha);
		}

		else {
			m_fCoolDownTime = (float)NULL;
		}
	}

	else {

		const int nMaxAlpha =100;

		if (nAlpha < nMaxAlpha) {
			m_CoolSkilDownIcon->PlusAlpha(m_nPlusAlpha);
		}

		const float fSplit = BLOCK_HEIGHT * m_fBaseSplitStatus / m_fScrollSplit;

		const float fMaxStatus = 100.f;

		m_fCoolDownTime += fSplit;
	}

	SetSize(m_SizeTime, m_SizeTime);
	m_CoolSkilDownIcon->UpdateCoolDownGage((float)m_fCoolDownTime, { m_SizeTime * 0.5f, m_SizeTime * 0.5f });

	COeSkill::Update();
}

//================================================================================================================================================================
//描画処理（全オブジェクト）
//================================================================================================================================================================
void COeSkill_Cool::Draw()
{
	COeSkill::Draw();
}

//================================================================================================================================================================
//ブロック生成
//================================================================================================================================================================
COeSkill_Cool* COeSkill_Cool::Create()
{
	COeSkill_Cool* pCOeSkill_Cool = new COeSkill_Cool();

	pCOeSkill_Cool->Init();

	return pCOeSkill_Cool;
}

//================================================================================================================================================================
//コンストラクタ
//================================================================================================================================================================
COeSkill_Jamming::COeSkill_Jamming(){
}

//================================================================================================================================================================
//デストラクタ
//================================================================================================================================================================
COeSkill_Jamming::~COeSkill_Jamming(){

}

//================================================================================================================================================================
//初期設定
//================================================================================================================================================================
HRESULT COeSkill_Jamming::Init(){

	COeSkill::Init();
	SetTexture("data\\TEXTURE\\repair_icon.png");
	SetSize(BLOCK_WIDE * 0.5f, BLOCK_HEIGHT * 0.5f);
	CObject2D::SetPos(SCREEN_WIDTH * 0.93f, SCREEN_HEIGHT * 0.9f);
	m_RepairSkilDownIcon = CSkill_CoolDown::Create({ SCREEN_WIDTH * 0.93f, SCREEN_HEIGHT * 0.9f - BLOCK_HEIGHT});
	return S_OK;
}

//================================================================================================================================================================
//終了処理
//================================================================================================================================================================
void COeSkill_Jamming::Uninit(){

	if (m_RepairSkilDownIcon != nullptr) {
		m_RepairSkilDownIcon->Uninit();
		m_RepairSkilDownIcon = nullptr;
	}

	COeSkill::Uninit();
}

//================================================================================================================================================================
//更新処理
//================================================================================================================================================================
void COeSkill_Jamming::Update(){

	bool bStay = CManager::GetInstance()->GetCamera()->GetPlayStay();

	if (bStay) {
		return;
	}

	//透明度取得
	const int nAlpha = m_RepairSkilDownIcon->GetAlpha();

	if (!m_bOeSkillCoolDown) {

		if (m_bOeskillShift && m_SizeTime <= BLOCK_WIDE) {
			m_SizeTime++;
		}

		else {
			if (m_SizeTime >= BLOCK_HEIGHT) {
				m_SizeTime--;
			}
		}

		if (nAlpha > NULL){
			m_RepairSkilDownIcon->PlusAlpha(-m_nPlusAlpha);
		}

		else {
			m_fCoolDownTime = NULL;
		}
	}

	else{
		const int nMaxAlpha = 100;

		if (nAlpha < nMaxAlpha){
			m_RepairSkilDownIcon->PlusAlpha(m_nPlusAlpha);
		}

		const float fSplit = BLOCK_HEIGHT * m_fBaseSplitStatus / m_fScrollSplit;

		m_fCoolDownTime += fSplit;

	}

	SetSize(m_SizeTime, m_SizeTime);

	m_RepairSkilDownIcon->UpdateCoolDownGage((float)m_fCoolDownTime, { m_SizeTime * 0.5f, m_SizeTime * 0.5f });
	
	COeSkill::Update();
}

//================================================================================================================================================================
//描画処理
//================================================================================================================================================================
void COeSkill_Jamming::Draw(){
	COeSkill::Draw();
}

//================================================================================================================================================================
//ブロック生成
//================================================================================================================================================================
COeSkill_Jamming* COeSkill_Jamming::Create(){

	COeSkill_Jamming* pCOeSkill_Jamming = new COeSkill_Jamming();
	pCOeSkill_Jamming->Init();
	return pCOeSkill_Jamming;
}